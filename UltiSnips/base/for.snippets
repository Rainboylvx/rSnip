# 
# 有关for的 snip
#

global !p
def forArgument(args):
	[name,start,end,dec] = args
	a = name if name !='' else 'i'
	b = start if start != '' else '1'
	c = end if end != '' else 'n'
	d = '++' + a
	if dec == '-':
		d = '--' + a
	compare_flag = '<=' if d[0] =='+' else '>='
	return "{i}={start};{i}{compare_flag}{end};{inc}".format(i=a,start=b,end=c,inc=d,compare_flag=compare_flag)
endglobal

global !p
def shorForArugments(args,FOR=True):
	[name,start,end] = args
	name  = name if name !='' else 'i'
	start = start if start != '' else '1' if FOR else 'n'
	end   = end if end != '' else 'n' if FOR else '1'
	return "{name},{start},{end}".format(name=name,start=start,end=end)
endglobal
# for
snippet "F(\w*) *(\S*) +(\S+) *(-*)" "f[iter] start end [-]" br
for(`!p snip.rv=forArgument(match.groups())`){
	$0
}
endsnippet

# define for i,1,n
snippet "f(\S+) +(\S+) +(\S+) *" "fo(i,1,n) " ir
For(`!p snip.rv=shorForArugments(match.groups())`){
	$0
}
endsnippet

# define for i,[1],n
snippet "f(\S+) +(\S+) *" "fo(i,[1],n) " ir
For(`!p snip.rv=shorForArugments([match.group(1),'',match.group(2)])`){
	$0
}
endsnippet

# define for i,[1],[n]
snippet "f(\S+) *" "fo(i,[1],n) " br
For(`!p snip.rv=shorForArugments(list(match.groups())+['',''])`){
	$0
}
endsnippet

# define for [i],[1],n
snippet "f +(\S+) *" "fo(i,[1],n) " br
For(`!p snip.rv=shorForArugments(['','']+list(match.groups()))`){
	$0
}
endsnippet

# define for [i],[1],[n]
snippet "f *" "fo(i,[1],n) " br
For(i,1,n){
	$0
}
endsnippet


# ============== reverse for

# define rof i,1,n
snippet "rf(\S+) +(\S+) +(\S+) *" "ro(i,n,1) " br
Rof(`!p snip.rv=shorForArugments(match.groups())`){
	$0
}
endsnippet

# define rof i,[1],n
snippet "rf(\S+) +(\S+) *" "ro(i,n,[1]) " br
Rof(`!p snip.rv=shorForArugments(list(match.groups())+['1'])`){
	$0
}
endsnippet

# define rof [i],n,[1]
snippet "rf +(\S+) *" "ro([i],n,[1]) " br
Rof(`!p snip.rv=shorForArugments(['']+list(match.groups())+['1'])`){
	$0
}
endsnippet

# define rof [i],[1],[n]
snippet "rf *" "fo(i,[1],n) " br
Rof(i,n,1){
	$0
}
endsnippet


